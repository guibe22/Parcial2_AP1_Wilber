@page "/"
@page "/{EmpacadoId:int}"
@inject EmpacadosBLL EmpacadosBLL
@inject ProductosBLL ProductosBLL

<EditForm Model="empacado" OnInvalidSubmit="Guardar">
     <DataAnnotationsValidator/>
     <ValidationSummary/>
     <div class= "card text-primary">
     
         <div class="card-header text-center  ">
            @*Encabezado*@
        <h1> Entrada de Productos Empacados</h1>
         </div>
     
        <div class="card-body">
            @*input Id y Boton buscar*@
            <div class="row">
                <div class="col-3">
                    <label for="txtId" class="form-label"> Id:</label>
                    <input type="number"  id="txtId" class="form-control" @bind-value="empacado.EmpacadoId">
                </div>

                 <div class="col-3 d-flex align-items-end">
                 <button type="button" class="btn btn-primary" @onclick="Buscar">
                    <span class="oi oi-magnifying-glass"></span>
                </button>
            </div>
                
            </div>
            
            <div class="row">
                @*input Fecha y Concepto*@
                <div class="col-6">
                    <label for="txtFecha" class="form-label"> Fecha:</label>
                    <input type="date"  id="txtFecha" class="form-control" @bind-value="empacado.Fecha">
                    <ValidationMessage For="@(() => empacado.Fecha)" />
                </div>
                <div class="col-6">
                    <label for="txtConcepto" class="form-label"> Concepto:</label>
                    <input type="text"  id="txtConcepto" class="form-control" @bind-value="empacado.Concepto">
                    
                </div>
            </div>
            
            @*input Producto y Cantidad para el detalle*@
            <h3>Utilizados</h3>

            <div class="row">
                <div class="col-4">
                    <label for="select" class="form-label">Producto:</label>
                    <InputSelect class="form-select" @bind-Value="detalleEmpacado.ProductoId">
                         @foreach (var producto in listaProductos )
                         {
                             <option value="@producto.ProductoId">@producto.Descripcion</option> 
                         }
                    </InputSelect>
                    
                </div>

                <div class="col-4">
                    <label for="select" class="form-label">Cantidad:</label>
                    <input type="number"  id="txtEjemplo" class="form-control" @bind-value="detalleEmpacado.Cantidad">
                    
                </div>
                <div class="col-3 d-flex align-items-end">
                 <button type="button" class="btn btn-primary" @onclick="Agregar">
                    Agregar
                </button>
            </div>
            
            @*tabla para mostrar el detalle*@
            <table class="table">
                <thead>
                    <tr>
                        <th>ProdcutoId</th>
                        <th>Descripcion</th>
                        <th>Cantidad</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var detalle in empacado.detalleEmpacados)
                    { 
                        <tr>
                            <td>@detalle.ProductoId</td> 
                            <td>@ProductosBLL.Buscar(detalle.ProductoId).Descripcion</td> 
                            <td>@detalle.Cantidad</td>
                            <td> <button name="Btn" id="Btn" class="btn btn-danger mr-2"
                                 @onclick=@(() => ElminarDetalle(detalle.DetalleEmpacadosId))> 
                                <span class="oi oi-trash"></span>
                                </button>
                                </td>
                        </tr>
                    }
                </tbody>
                </table>
                <label > Total = @empacado.Cantidad</label>

                @*seccion de producidos*@
                <h3>Producidos</h3>

                <div class="row">
                    <div class="col-6">
                        <label for="txtDescripcion" class="form-label"> Descripcion:</label>
                        <input type="text"  id="txtDescripcion" class="form-control" @bind-value="empacado.Producido">
                    </div>

                    <div class="col-6">
                        <label for="txtDescripcion" class="form-label"> Cantidad:</label>
                        <input type="text"  id="txtDescripcion" class="form-control" @bind-value="producto.Existencia">
                    </div>
                </div>
         </div>
        </div>
        <div class="card-footer text-center fs-5 ">
             @*Botones*@
             <button name="BtnNuevo" id="BtnNuevo" class="btn btn-primary mr-2" @onclick="Nuevo"> Nuevo </button>
             <button name="BtnGuardar" id="BtnGuardar" class="btn btn-success mr-2" @onclick="Guardar"> Guardar </button>
             <button name="BtnEliminar" id="BtnEliminar" class="btn btn-danger mr-2" @onclick="Eliminar"> Eliminar </button>
         </div>
     </div>
</EditForm>

  
@code{
    [Parameter]
    public int EmpacadoId{get; set;}
    public Empacados empacado { get; set; } = new Empacados();
    public DetalleEmpacados detalleEmpacado{ get; set; } = new DetalleEmpacados();
    public  List<Productos> listaProductos=  new List<Productos>();
    public Productos producto { get; set; } = new Productos();
    
   

    protected override void OnInitialized()
    {
        listaProductos= ProductosBLL.GetList(o=> true);
        if(EmpacadoId>0){
            empacado.EmpacadoId = EmpacadoId;
            Buscar();
        }
        else{
         empacado.Fecha = DateOnly.FromDateTime(DateTime.Today);
        }
        
    

    }

    void Guardar(){
        if(!Validar()){ return;}
        producto.Descripcion= empacado.Producido;
        if(ProductosBLL.GetList(o => o.Descripcion==producto.Descripcion).Count==1 &&
             !ProductosBLL.Existe(producto.ProductoId)){ return;}
        if(EmpacadosBLL.Guardar(empacado)){
            
            producto.Precio=150;
            producto.Costo= 100;
            ProductosBLL.Guardar(producto);
            Nuevo();
        }

    }

    void Buscar(){
        var encontrado = EmpacadosBLL.Buscar(empacado.EmpacadoId);
        if(encontrado!=null){
            empacado= encontrado;
            var productoEncontrado = ProductosBLL.Buscar(empacado.Producido);
            if(productoEncontrado!=null){
                producto= productoEncontrado;
                 
            }

        }

    }
    void Agregar(){
        
        if(detalleEmpacado.Cantidad>0 && detalleEmpacado.ProductoId>0){
            
            empacado.detalleEmpacados.Add(detalleEmpacado);
            empacado.Cantidad+= detalleEmpacado.Cantidad;
            producto.Existencia= empacado.Cantidad*4;;
            detalleEmpacado = new DetalleEmpacados();
            
        }

    }
    void Nuevo(){
        empacado = new Empacados();
        detalleEmpacado= new DetalleEmpacados();
        producto= new Productos();

    }
    void Eliminar(){
        if(EmpacadosBLL.Existe(empacado.EmpacadoId)){
            if(EmpacadosBLL.Eliminar(empacado)){
                ProductosBLL.Eliminar(producto);
                 Nuevo();
            } 
        }

    }
    bool Validar(){
        bool validacion = true ;
        if(String.IsNullOrEmpty(empacado.Concepto)){ validacion= false;}
        if(empacado.Cantidad<2){ validacion= false;}
        if(empacado.detalleEmpacados.Count<2) {validacion=false;}
        if(string.IsNullOrEmpty(empacado.Producido)){validacion=false;}
        
        return validacion;
    }

    void ElminarDetalle(int detalleIdSeleccionado){
        if(empacado.detalleEmpacados!=null && detalleIdSeleccionado>0 ){
            empacado.detalleEmpacados.RemoveAll(d => d.DetalleEmpacadosId ==detalleIdSeleccionado );
           
           empacado.Cantidad = empacado.detalleEmpacados.Sum(o=> o.Cantidad);
           producto.Existencia= empacado.Cantidad *4;
        }

       

}

}